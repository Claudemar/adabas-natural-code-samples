                                                        

* THERE WAS A CHALLENGE RAISED ON SAG-L REGARDING THE
* "COMPRESSION" OF AN ARRAY. ONE SPECIAL CASE WAS THE
* ELIMINATION OF BLANK OCCURRENCES.
*
* THERE WERE QUITE A FEW SOLUTIONS SUGGESTED FOR THIS 
* SPECIAL CASE. THE FASTEST OF THE SOLUTIONS WAS THE
* TWO STEP (COMPRESS & SEPARATE) SOLUTION SHOWN BELOW.
*
* I RECENTLY HAD SOME FREE TIME AND DECIDED TO PLAY 
* A BIT WITH THIS PROBLEM. THE SOLUTION BELOW DOES REQUIRE
* A GROUP ARRAY RATHER THAN A SIMPLE VARIABLE ARRAY. 
* HOWEVER, #ARRAYB REFERENCES ARE ALWAYS THE SAME AS
* COMPARABLE #ARRAYA REFERENCES.
* NOTE, THIS WOULD NOT BE TRUE FOR #STRINGA AND #STRINGB.
*
* THIS PROGRAM MERELY SHOWS THAT BOTH SOLUTIONS PRODUCE
* THE SAME RESULTS.
*
DEFINE DATA LOCAL
1 #ARRAYA (A3/1:10)
1 REDEFINE #ARRAYA  
  2 #STRINGA (A30)   
1 #GROUP (10)
  2 #ARRAYB (A3)
  2 #FILLER (A1) INIT ALL <'&'>  
1 REDEFINE #GROUP
  2 #STRINGB (A40)  
END-DEFINE
*
INCLUDE AATITLER
INCLUDE AASETC
*
MOVE 'AAA   BB CCCDDD      E  FFFGGG' TO #STRINGA
WRITE 5T '#ARRAYA BEFORE ==>' #ARRAYA (*)
*
COMPRESS #ARRAYA (*) INTO #STRINGA WITH DELIMITER ';'
SEPARATE #STRINGA INTO #ARRAYA(*) WITH DELIMITER ';'
WRITE 5T '#ARRAYA AFTER  ==>' #ARRAYA (*) //
*
MOVE 'AAA&   &BB &CCC&DDD&   &   &E  &FFF&GGG&' TO #STRINGB
WRITE 5T '#ARRAYB BEFORE ==>' #ARRAYB(*)
*
EXAMINE #STRINGB FOR FULL '   &' DELETE
WRITE 5T '#ARRAYB AFTER  ==>' #ARRAYB (*)
*
END

*****************************************************
Output from the program above  
 
 
    PAGE #   1                    DATE:    02/19/11
    PROGRAM: GROUP05A             LIBRARY: NEWPROGS
 
    #ARRAYA BEFORE ==> AAA     BB  CCC DDD         E   FFF GGG
    #ARRAYA AFTER  ==> AAA BB  CCC DDD E   FFF GGG
 
 
    #ARRAYB BEFORE ==> AAA     BB  CCC DDD         E   FFF GGG
    #ARRAYB AFTER  ==> AAA BB  CCC DDD E   FFF GGG

***********************************************************
Timing comparison program for the two techniques above

* NOW FOR THE "FUN"; A TIMING COMPARISON
* BETWEEN THE TWO APPROACHES SHOWN ABOVE.
*
DEFINE DATA LOCAL
1 #ARRAYA (A3/1:10)
1 REDEFINE #ARRAYA  
  2 #STRINGA (A30)   
1 #GROUP (10)
  2 #ARRAYB (A3)
  2 #FILLER (A1) INIT ALL <'&'>  
1 REDEFINE #GROUP
  2 #STRINGB (A40)  
**
1 #CPU-START (I4)
1 #CPU-ELAPSED (I4)
1 #LOOP (I4)  
END-DEFINE
*
INCLUDE AATITLER
INCLUDE AASETC
*
MOVE *CPU-TIME TO #CPU-START
SETA. SETTIME
FOR #LOOP = 1 TO 1000000
MOVE 'AAA&   &BB &CCC&DDD&   &   &E  &FFF&GGG&' TO #STRINGB
END-FOR
COMPUTE #CPU-ELAPSED = *CPU-TIME - #CPU-START
WRITE 5T 'DUMMY FOR LOOP' 20T *TIMD (SETA.) #CPU-ELAPSED
*
* NOTE. THE EXAMINE LOOP DESTROYS THE "SOURCE" ARRAY.
* HENCE, IN ORDER TO HAVE AN EQUAL COMPARISON, I ADDED
* A SEEMINGLY UNNECESSARY MOVE TO THE COMPRESS LOOP.
* (THE TARGET OF THE COMPRESS COULD HAVE BEEN ANOTHER VARIABLE).
* THEREFORE, I ADDED THE MOVE TO THE "DUMMY" LOOP
* SHOWN ABOVE.
*
MOVE *CPU-TIME TO #CPU-START
SETB. SETTIME
FOR #LOOP = 1 TO 1000000
    MOVE 'AAA   BB CCCDDD      E FFFGGG' TO #STRINGA
    COMPRESS #ARRAYA (*) INTO #STRINGA WITH DELIMITER ';'
    SEPARATE #STRINGA INTO #ARRAYA (*) WITH DELIMITER ';'
    END-FOR
COMPUTE #CPU-ELAPSED = *CPU-TIME - #CPU-START
WRITE 5T 'COMPRESS ' 20T *TIMD (SETB.) #CPU-ELAPSED
*
MOVE *CPU-TIME TO #CPU-START
SETC. SETTIME
FOR #LOOP = 1 TO 1000000
   MOVE 'AAA&   &BB &CCC&DDD&   &   &E  &FFF&GGG&' TO #STRINGB
   EXAMINE #STRINGB FOR FULL '   &' DELETE
   END-FOR
COMPUTE #CPU-ELAPSED = *CPU-TIME - #CPU-START
WRITE 5T 'EXAMINE ' 20T *TIMD (SETC.) #CPU-ELAPSED
END
  
*************************************************
PC output
 
    PAGE #   1                    DATE:    02/19/11
    PROGRAM: GROUP05B             LIBRARY: NEWPROGS
 
    DUMMY FOR LOOP        5          51
    COMPRESS             71         704
    EXAMINE              14         146
    
***************************************************    
Mainframe output
    
    PAGE #   1                    DATE:    02/19/11
    PROGRAM: GROUP05B             LIBRARY: XSTRO
 
    DUMMY FOR LOOP        8          80
    COMPRESS             76         706
    EXAMINE              34         306    
    #ARRAYB AFTER  ==> AAA BB  CCC DDD E   FFF GGG                                        