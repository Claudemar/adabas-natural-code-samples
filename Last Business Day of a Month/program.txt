                                                        

Here is the "driver" program for our subprogram:

* THIS PROGRAM HAS A DATE IN #DATE.
* WE WILL PRESUME THE DATE HAS BEEN VALIDATED
*
* WE REQUIRE THE LAST BUSINESS DAY OF THE MONTH
*
DEFINE DATA LOCAL
1 #DATE (A8) INIT <'20110220'>
1 #LAST-BIZ-DAY (A8)
1 #DAY-WEEK (A10)
1 #DATE-D (D)
END-DEFINE
*
INCLUDE AATITLER
INCLUDE AASETC
*
CALLNAT 'DATE03A' #DATE #LAST-BIZ-DAY
*
MOVE EDITED #LAST-BIZ-DAY TO #DATE-D (EM=YYYYMMDD)
MOVE EDITED #DATE-D (EM=NNNNNNNNNN) TO #DAY-WEEK
*
WRITE 5T 'FOR THE GIVEN DATE: ' #DATE  (EM=XXXX-XX-XX) //
      5T 'THE LAST BUSINESS DAY OF THE MONTH IS: ' #LAST-BIZ-DAY (EM=XXXX-XX-XX) /
      5T 'WHICH IS A ' #DAY-WEEK
*
END

**********************************************************************
Now, the subprogram, DATE03A:

* THIS SUBPROGRAM WILL FIND THE LAST BUSINESS
* DAY OF THE MONTH FOR A SPECIFIED DATE
*
*******   IMPORTANT NOTE   *********
*
* THIS SUBPROGRAM ASSUMES THAT SATURDAY AND SUNDAY
* COMPRISE THE WEEKEND.
*
DEFINE DATA PARAMETER
1 #DATE (A8)
1 #LAST-BIZ-DAY (A8)
LOCAL
1 #DATE-W (A8)
1 REDEFINE #DATE-W
  2 #DATE-N (N8)
1 REDEFINE #DATE-W
  2 #YEAR (N4)
  2 #MONTH (N2)
  2 #DAY (N2)
1 #DATE-D (D)
1 #DAY-OF-WEEK (A1)
1 #FIX-YEARS (N4/1:6) INIT <2002,2013,2018,2024,2029,2040>
END-DEFINE
*
* FIRST, WE CREATE THE FIRST DAY OF THE
* FOLLOWING MONTH
*
MOVE #DATE TO #DATE-W
MOVE 1 TO #DAY
ADD 1 TO #MONTH
IF #MONTH = 13
   MOVE 1 TO #MONTH
   ADD 1 TO #YEAR
   END-IF
*
* NOW WE CREATE THE DATE FORMAT OF OUR FIRST DAY
*
MOVE EDITED #DATE-W TO #DATE-D (EM=YYYYMMDD)
*
* NOW WE SUBTRACT ONE TO CREATE THE LAST DAY
* OF OUR GIVEN MONTH
*
SUBTRACT 1 FROM #DATE-D
*
* NOW WE WILL TAKE CARE OF WEEKENDS
*
******  WARNING  ******
*
* THE ASSIGNMENT OF NUMBERS TO THE RESULT OF
* AN EDIT MASK OF EM=O (SEE BELOW) IS CONTROLLED BY THE 
* PARAMETER DTFORM. 
*
* I HAVE DTFORM SET TO 'U' (USA). HENCE, SUNDAY IS A ONE
* AND SATURDAY IS A SEVEN. ANY OTHER SETTING FOR
* DTFORM (E, FOR EUROPE; G, FOR GERMANY; I, FOR INTERNATIONAL)
* RESULTS IN MONDAY BEING A ONE AND SUNDAY BEING A SEVEN.
*
MOVE EDITED #DATE-D (EM=O) TO #DAY-OF-WEEK
IF #DAY-OF-WEEK = '1'
   SUBTRACT 2 FROM #DATE-D
   END-IF
IF #DAY-OF-WEEK = '7'
   SUBTRACT 1 FROM #DATE-D
   END-IF
*
****** IMPORTANT NOTE  *******
*
* IN THE USA, THERE ARE ONLY TWO HOLIDAYS THAT
* CAN CONFLICT WITH THE END OF A MONTH,
* MEMORIAL DAY AND GOOD FRIDAY. 
*
* NOW WE TEST FOR MEMORIAL DAY BEING THE 31'ST.
* MEMORAL DAY IS ALWAYS THE LAST MONDAY OF MAY.
*
* YOU WILL NOTE THE TEST IS FOR #MONTH = 6, NOT 5.
* IF YOU LOOK EARLIER IN THE CODE, WE INCREASED
* #MONTH BY ONE WHEN WE CREATED THE FIRST DAY
* OF THE FOLLOWING MONTH.
*
IF #MONTH = 6 AND #DAY-OF-WEEK = '2'
   SUBTRACT 3 FROM #DATE-D
   END-IF
*
****** TESTING FOR GOOD FRIDAY  ******
*
* GOOD FRIDAY'S DATE VARIES FROM YEAR TO YEAR. 
* THE ACTUAL DATE RANGES FROM MARCH 22ND TO APRIL 25TH.
* NOTE THAT APRIL CANNOT BE A PROBLEM; ONLY MARCH.
* A QUICK PERUSAL OF A CALENDAR, AND A TABLE OF
* GOOD FRIDAY DATES REVEALS THAT THE ONLY POSSIBLE
* PROBLEMS OCCUR WHEN GOOD FRIDAY FALLS ON MARCH 29-31.
* THE HARD CODED ARRAY #FIX-YEARS CONTAINS THE POSSIBLE
* PROBLEM YEARS (UP TO THE YEAR 2050).
*
* NOW WE TEST FOR GOOD FRIDAY
*
IF #MONTH = 4 AND #YEAR = #FIX-YEARS (*)
   SUBTRACT 1 FROM #DATE-D
   END-IF
*
* NOTE, IF YOUR REQUIREMENTS CONTAIN SUCH "MOVEABLE"
* HOLIDAYS, YOU COULD HAVE AN ARRAY OF YEAR-MONTH
* COMBINATIONS THAT WOULD EASILY MODIFY #DATE-D.
*
MOVE EDITED #DATE-D (EM=YYYYMMDD) TO #LAST-BIZ-DAY
END

*************************************************

Now, the output from running the driver program

    PAGE #   1                    DATE:    02/14/11
    PROGRAM: DATE03B              LIBRARY: NEWPROGS
 
    FOR THE GIVEN DATE:  2011-02-20
 
    THE LAST BUSINESS DAY OF THE MONTH IS:  2011-02-28
    WHICH IS A  Monday
                                        